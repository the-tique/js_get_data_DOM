{"version":3,"sources":["scripts/main.js"],"names":["populationList","document","querySelectorAll","totalPopulation","querySelector","averagePopulation","populationArr","text","number","textContent","split","join","push","calculatePopulation","array","sum","reduce","accumulator","currentValue","average","length","result","toLocaleString"],"mappings":";AAAA,aA6BA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA3BA,IA2BA,EA3BMA,EAAiBC,SAASC,iBAAiB,eAC3CC,EAAkBF,SAASG,cAAc,qBACzCC,EAAoBJ,SAASG,cAAc,uBAC3CE,EAAgB,GAEHN,EAAAA,EAAAA,GAsBnB,IAtBmC,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAxBO,IAAAA,EAAwB,EAAA,MAC3BC,GAAUD,EAAKE,YAAYC,MAAM,KAAKC,KAAK,IAEjDL,EAAcM,KAAKJ,IAmBrB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAhBA,SAASK,EAAoBC,GACrBC,IAAAA,EAAMD,EAAME,OAChB,SAACC,EAAaC,GAAiBD,OAAAA,EAAcC,GAAc,GAKtD,MAAA,CACLH,IAAAA,EACAI,QAJcJ,EAAMD,EAAMM,QAQ9B,IAAMC,EAASR,EAAoBP,GAEnCH,EAAgBM,YAAcY,EAAON,IAAIO,eAAe,SACxDjB,EAAkBI,YAAcY,EAAOF,QAAQG,eAAe","file":"main.0e9f2614.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst populationList = document.querySelectorAll('.population');\nconst totalPopulation = document.querySelector('.total-population');\nconst averagePopulation = document.querySelector('.average-population');\nconst populationArr = [];\n\nfor (const text of populationList) {\n  const number = +text.textContent.split(',').join('');\n\n  populationArr.push(number);\n}\n\nfunction calculatePopulation(array) {\n  const sum = array.reduce(\n    (accumulator, currentValue) => accumulator + currentValue, 0\n  );\n\n  const average = sum / array.length;\n\n  return {\n    sum,\n    average,\n  };\n}\n\nconst result = calculatePopulation(populationArr);\n\ntotalPopulation.textContent = result.sum.toLocaleString('en-US');\naveragePopulation.textContent = result.average.toLocaleString('en-US');\n"]}